name: QA

on:
  push:
    branches:
      - main
  pull_request:
     branches:
      - main
  workflow_dispatch:

env:
  APP_URL: http://localhost:81/ui/#/
  CXBOX_LOGGER:  true

jobs:
  build-qa-pr-and-check-autotests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK '17'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: "maven"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: "yarn"
          cache-dependency-path: ui

      - name: Load target
        run: mvn clean install -U -PUI

      - name: build docker image and start
        run: |
          sudo chmod -R 777 ./docker
          sudo docker images
          sudo docker compose -f docker-compose-test.yml up -d

      - name: Run tests
        run: mvn --batch-mode -DrunTests=true  -Dsurefire.parallel=classes -Dsurefire.forkCount=5 -Dsurefire.threadCount=1 -Dsurefire.reuseForks=false -Dtest=application.Samples.Form.**,application.Samples.Info.** test

      - name: Create pull_request directory
        if: always()
        run: mkdir -p gh-pages/pull_request

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: target/allure-results
          allure_report: gh-pages/pull_request/${{ github.run_number }}/allure-report
          keep_reports: 20

      - name: List report directory
        run: ls -R gh-pages/pull_request/${{ github.run_number }}/allure-report

      - name: Prepare files for deployment
        if: always()
        run: |
          mkdir -p deploy/pull_request/${{ github.run_number }}
          cp -r gh-pages/pull_request/${{ github.run_number }}/allure-report/* deploy/pull_request/${{ github.run_number }}/   

      - name: Clean old side-tests reports
        if: always()
        run: |
          REPORTS_DIR="gh-pages/side-tests"
          MAX_REPORTS=20
          
          if [ -d "$REPORTS_DIR" ]; then
            REPORT_COUNT=$(ls -1 "$REPORTS_DIR" | wc -l)
          
            if [ "$REPORT_COUNT" -gt "$MAX_REPORTS" ]; then
              echo "::notice::Too many reports ($REPORT_COUNT), cleaning up..."
          
              OLDEST_REPORT=$(git ls-tree -r --name-only HEAD "$REPORTS_DIR" | xargs -I {} git log --format="%at %f" -1 -- {} | sort | awk '{print $2}' | head -n 1)
          
              if [ -n "$OLDEST_REPORT" ]; then
                echo "::notice::Removing oldest report: $OLDEST_REPORT"
                rm -rf "$REPORTS_DIR/$OLDEST_REPORT"
                git add "$REPORTS_DIR"
                git commit -m "Cleanup old report: $OLDEST_REPORT"
                git push origin gh-pages
              fi
            fi
          fi  

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: deploy/pull_request
          destination_dir: pull_request
          keep_files: true

      - name: Post test summary to PR
        if: always()
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples/pull_request/${{ github.run_number }}"

          PASSED=$(jq '.statistic.passed' target/allure-results/widgets/summary.json)
          BROKEN=$(jq '.statistic.broken' target/allure-results/widgets/summary.json)
          FAILED=$(jq '.statistic.failed' target/allure-results/widgets/summary.json)
          SKIPPED=$(jq '.statistic.skipped' target/allure-results/widgets/summary.json)
          UNKNOWN=$(jq '.statistic.unknown' target/allure-results/widgets/summary.json)

          echo "### 📊 Test Report: [View Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY
          echo "| ✅ Passed | ⚠️ Broken | ❌ Failed | ⏭ Skipped | ❓ Unknown |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|---------|--------|---------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| $PASSED  | $BROKEN | $FAILED | $SKIPPED | $UNKNOWN |" >> $GITHUB_STEP_SUMMARY

      - name: Generate and add report URL to Job Summary
        if: always()
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples/pull_request/${{ github.run_number }}"
          echo "Report URL: $REPORT_URL"
          echo "::notice::Report URL: $REPORT_URL"
          echo "### Report URL" >> $GITHUB_STEP_SUMMARY
          echo "The report is available at: $REPORT_URL" >> $GITHUB_STEP_SUMMARY

      - name: cleanup docker resources
        if: always()
        run: |
          sudo docker compose -f docker-compose-test.yml down --remove-orphans
          sudo docker system prune -a --volumes -f

  build-qa-main-and-check-autotests:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK '17'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: "maven"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: "yarn"
          cache-dependency-path: ui

      - name: Load target
        run: mvn clean install -U -PUI

      - name: build docker image and start
        run: |
          sudo chmod -R 777 ./docker
          sudo docker images
          sudo docker compose -f docker-compose-test.yml up -d

      - name: Run tests
        run: mvn --batch-mode -DrunTests=true  -Dsurefire.parallel=classes -Dsurefire.forkCount=5 -Dsurefire.threadCount=1 -Dsurefire.reuseForks=false -Dtest=application.Samples.Form.**,application.Samples.Info.** test

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results
          allure_report: allure-report
          keep_reports: 20

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
          keep_files: true

      - name: Generate and add report URL to Job Summary
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples/"
          echo "Report URL: $REPORT_URL"
          echo "::notice::Report URL: $REPORT_URL"
          echo "### Report URL" >> $GITHUB_STEP_SUMMARY
          echo "The report is available at: $REPORT_URL" >> $GITHUB_STEP_SUMMARY   

      - name: cleanup docker resources
        if: always()
        run: |
          sudo docker compose -f docker-compose-test.yml down --remove-orphans
          sudo docker system prune -a --volumes -f
