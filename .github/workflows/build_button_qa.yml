name: Run tests by button

on:
  workflow_dispatch:
   inputs:
     choice-test:
       type: choice
       description: Package
       options:
       - All tests
       - Package, class or test
     test-path:
       description: include PATH
       type: string
       required: false
     docker_run:
       type: choice
       description: Run at
       options:
         - 'http://code-samples.cxbox.org/'
         - Branch in docker
     video_tags:
       description: "Record failed video"
       required: false
       type: boolean
     log_tags:
       description: "Logging network"
       default: true
       required: false
       type: boolean
     fork_count:
       description: "Run parallel"
       type: number
       default: 3
       required: false

env:
  APP_URL: http://code-samples.cxbox.org/ui/#/
  CXBOX_RECORDER:  ${{ github.event.inputs.video_tags == 'true' && 'true' || 'false' }}
  CXBOX_LOGGER:  ${{ github.event.inputs.log_tags == 'true' && 'true' || 'false' }}

jobs:
  build-qa_main:
    if: (inputs.choice-test == 'All tests' && github.ref == 'refs/heads/main') &&  inputs.docker_run == 'Branch in docker'
    env:
       APP_URL: http://localhost:81/ui/#/
    runs-on: ubuntu-latest
    strategy:
        matrix:
          java: [ '17' ]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: docker compose build

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: "maven"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cashe: "yarn"
          cache-dependency-path: ui

      - name: Load target
        run: mvn clean install -U -PUI

      - name: List Docker images
        run: docker images

      - name: Set permissions for ./docker
        run: sudo chmod -R 777 ./docker

      - name: Start docker-compose run
        run: sudo docker compose -f docker-compose-test.yml up -d

      - name: Run default tests
        if: ${{ inputs.fork_count == 0 }}
        run: mvn --batch-mode -DrunTests=true -Dsurefire.parallel=none -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test

      - name: Run default tests in parallel
        if: ${{ inputs.fork_count != 0 }}
        run: mvn --batch-mode -DrunTests=true  -Dsurefire.parallel=classes -Dsurefire.forkCount=${{ github.event.inputs.fork_count }} -Dsurefire.threadCount=1 -Dsurefire.reuseForks=true -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          repository: CX-Box/cxbox-code-samples-allure
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.CODE_SAMPLES_ALLURE }}

      - name: Test here and host elsewhere
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        id: allure-report
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages/main
          allure_report: allure-report
          allure_history: allure-history
          github_repo: CX-Box/cxbox-code-samples-allure
          github_repo_owner: CX-Box
          report_url: https://cx-box.github.io/cxbox-code-samples-allure/main
          keep_reports: 20

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          external_repository: CX-Box/cxbox-code-samples-allure
          personal_token: ${{ secrets.CODE_SAMPLES_ALLURE }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: main
          keep_files: true

      - name: Generate and add report URL to Job Summary
        if: always()
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples-allure/main/${{github.run_number}}"
          echo "Report URL: $REPORT_URL"
          echo "::notice::Report URL: $REPORT_URL"
          echo "### Report URL" >> $GITHUB_STEP_SUMMARY
          echo "The report is available at: $REPORT_URL" >> $GITHUB_STEP_SUMMARY 

      - name: Stop and remove Docker compose
        if: always()
        run: sudo docker compose -f docker-compose-test.yml down

      - name: Remove unused data
        if: always()
        run: sudo docker system prune -a --volumes -f


  build-qa_manual:
    if: inputs.docker_run == 'http://code-samples.cxbox.org/'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: "maven"

      - name: Create reports directory
        run: mkdir -p build/reports/tests/


      - name: Run tests
        if: ${{inputs.choice-test == 'Package, class or test' && inputs.fork_count == 0}}
        run: mvn --batch-mode -DrunTests=true -Dsurefire.parallel=none -Dtest=${{github.event.inputs.test-path}} test

      - name: Run tests in parallel
        if: ${{inputs.choice-test == 'Package, class or test' && inputs.fork_count != 0}}
        run: mvn --batch-mode -DrunTests=true -Dsurefire.parallel=classes -Dsurefire.forkCount=${{ github.event.inputs.fork_count }} -Dsurefire.threadCount=1 -Dsurefire.reuseForks=true -Dtest=${{github.event.inputs.test-path}} test


      - name: Run default tests
        if: ${{inputs.choice-test == 'All tests' && inputs.fork_count == 0 }}
        run: |
          mvn --batch-mode -DrunTests=true -Dsurefire.parallel=none -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test    

      - name: Run default tests in parallel
        if: ${{inputs.choice-test == 'All tests' && inputs.fork_count != 0 }}
        run: |
          mvn --batch-mode -DrunTests=true -Dsurefire.parallel=classes -Dsurefire.forkCount=${{ github.event.inputs.fork_count }} -Dsurefire.threadCount=1 -Dsurefire.reuseForks=true -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test       

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          repository: CX-Box/cxbox-code-samples-allure
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.CODE_SAMPLES_ALLURE }}

      - name: Test here and host elsewhere
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        id: allure-report
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages/manual
          allure_report: allure-report
          allure_history: allure-history
          github_repo: CX-Box/cxbox-code-samples-allure
          github_repo_owner: CX-Box
          report_url: https://cx-box.github.io/cxbox-code-samples-allure/manual
          keep_reports: 20


      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          external_repository: CX-Box/cxbox-code-samples-allure
          personal_token: ${{ secrets.CODE_SAMPLES_ALLURE }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: manual
          keep_files: true

      - name: Generate and add report URL to Job Summary
        if: always()
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples-allure/manual/${{ github.run_number}}"
          echo "Report URL: $REPORT_URL"
          echo "::notice::Report URL: $REPORT_URL"
          echo "### Report URL" >> $GITHUB_STEP_SUMMARY
          echo "The report is available at: $REPORT_URL" >> $GITHUB_STEP_SUMMARY 


  build-qa_local:
    if: (inputs.choice-test == 'Package, class or test' || github.ref != 'refs/heads/main') &&  inputs.docker_run == 'Branch in docker'
    env:
      APP_URL: http://localhost:81/ui/#/
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: docker compose build

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: "maven"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: "yarn"
          cache-dependency-path: ui/yarn.lock

      - name: Load target
        run: mvn clean install -U -PUI

#      - name: Stop and remove containers, networks
#        run: sudo docker compose -f docker-compose-test.yml down --remove-orphans

      - name: List Docker images
        run: docker images

#      - name: Build docker-compose
#        run: sudo docker compose -f docker-compose-test.yml build

      - name: Set permissions for ./docker
        run: sudo chmod -R 777 ./docker

      - name: Start docker-compose run
        run: sudo docker compose -f docker-compose-test.yml up -d

      - name: Run some kind of test
        if: ${{inputs.choice-test == 'Package, class or test' && inputs.fork_count == 0}}
        run: mvn --batch-mode -DrunTests=true -Dsurefire.parallel=none -Dtest=${{github.event.inputs.test-path}} test

      - name: Run some kind of test in parallel
        if: ${{inputs.choice-test == 'Package, class or test' && inputs.fork_count != 0}}
        run: mvn --batch-mode -DrunTests=true -Dsurefire.parallel=classes -Dsurefire.forkCount=${{ github.event.inputs.fork_count }} -Dsurefire.threadCount=1 -Dsurefire.reuseForks=true -Dtest=${{github.event.inputs.test-path}} test

      - name: Run default tests in parallel
        if: ${{inputs.choice-test == 'All tests' && inputs.fork_count != 0 }}
        run: |
          mvn --batch-mode -DrunTests=true -Dsurefire.parallel=classes -Dsurefire.forkCount=${{ github.event.inputs.fork_count }} -Dsurefire.threadCount=1 -Dsurefire.reuseForks=true -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test   

      - name: Run default tests
        if: ${{inputs.choice-test == 'All tests' && inputs.fork_count == 0 }}
        run: |
          mvn --batch-mode -DrunTests=true -Dsurefire.parallel=none -Dtest=application.Samples.Form.**,application.Samples.Info.**,application.Samples.List.**,application.Samples.DictionaryAdministrationTest test       

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          repository: CX-Box/cxbox-code-samples-allure
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.CODE_SAMPLES_ALLURE }}

      - name: Test here and host elsewhere
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        id: allure-report
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages/manual
          allure_report: allure-report
          allure_history: allure-history
          github_repo: CX-Box/cxbox-code-samples-allure
          github_repo_owner: CX-Box
          report_url: https://cx-box.github.io/cxbox-code-samples-allure/manual
          keep_reports: 20

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          external_repository: CX-Box/cxbox-code-samples-allure
          personal_token: ${{ secrets.CODE_SAMPLES_ALLURE }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: manual
          keep_files: true

      - name: Generate and add report URL to Job Summary
        if: always()
        run: |
          REPORT_URL="https://cx-box.github.io/cxbox-code-samples-allure/manual/${{github.run_number}}"
          echo "Report URL: $REPORT_URL"
          echo "::notice::Report URL: $REPORT_URL"
          echo "### Report URL" >> $GITHUB_STEP_SUMMARY
          echo "The report is available at: $REPORT_URL" >> $GITHUB_STEP_SUMMARY 

      - name: Stop and remove Docker compose
        if: always()
        run: sudo docker compose -f docker-compose-test.yml down

      - name: Remove unused data
        if: always()
        run: sudo docker system prune -a --volumes -f
              #Change to docker container prune -f && docker network prune -f ?
